<!-- 
    Login page, user is redirected here when the user clicks on Login.
-->

{% extends 'base.jinja' %}

{% block content %} 

    <style>
        body {
            font-family: Arial, sans-serif;
            padding: 20px;
            background-color: darkblue;
        }

        h1 {
            color: #333;
        }

        p {
            margin-bottom: 5px;
            font-weight: bold;
        }

        input, select {
            width: 100%;
            padding: 10px;
            margin: 10px 0;
            border-radius: 5px;
            border: 1px solid #ccc;
        }

        button {
            background-color: #f44336;
            border: none;
            color: white;
            padding: 10px 10px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
            cursor: pointer;
            border-radius: 4px;
        }

        button:hover {
            background-color: #d32f2f;
        }

        .signup-container {
            width: 300px;
            margin: auto auto;
            padding: 150px;
            background-color: #fff;
            border-radius: 30px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            margin-top: 100px;
        }

    </style>

    <div class="signup-container">
        <h1>Login</h1>
        <p>Username</p>
        <input id="username"/>
        <p>Password</p>
        <input id="password"  type="password"/>
        <button onclick="login()">Login</button>
        <button onclick="redirectToIndex()">Back</button>
    </div>
    
    
    <script>

        // Go back to index
        function redirectToIndex() {
            window.location.href = "{{ url_for('index') }}";
        }

        //checks if URL sent by server is not an error message
        function isValidURL(string) {
            if (string.length == 0) {
                return false;
            }
            if (string[0] == "/") {
                return true;
            }
            return false;
        }

        async function login() {
            let loginURL = "{{ url_for('login_the_user') }}";   //gives the URL to post the login request to

            let password = $("#password").val();    //grabbing the password entered in by the user
            password = password.replace(/\s/g, ''); //removing all the white spaces
            password = password.hashCode();         //hashing the password

            //escapes the input to protect against XSS attacks
            let username = encodeURIComponent($("#username").val());
            password = encodeURIComponent(password);

            //using axios.post to pass the username and password to the server
            let res = await axios.post(loginURL, {
                username: username,
                password: password
            });

            // if the server sends in an error message, alert() the error message
            if (!isValidURL(res.data)) {
                alert(res.data);
                return;
            }

            //creates a passphrase by concatenating the password and username, ensures that the passphrase is unique to the user, then hashes for security
            var revpas = password
            var user = username
            var passphrase = revpas + user;
            //passphrase = String(passphrase.hashCode());

            const privkey = cryptico.generateRSAKey(passphrase, 2048);  //generates a private key using the passphrase
            const serial_privkey = exportRSAKey(privkey);   //exports the private key to a string
            await storeRSAKey(serial_privkey, passphrase);  //stores the private key in the IndexedDB
            await addData(passphrase);            //adds the passphrase to the IndexedDB
            window.open(res.data, "_self")   // redirects to the URL (ie. res.data) sent by the server would in this case would be home
        }

    </script>
{% endblock %}